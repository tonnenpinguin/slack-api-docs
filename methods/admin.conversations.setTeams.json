{
  "desc": "Set the workspaces in an Enterprise grid org that connect to a public or private channel.\n\nThis [Admin API method](/admins) sets the workspaces connected to a channel.\n\nWhen used with the `team_id` parameter, this method sets the requested `channel_id` as a regular channel on the `team_id` workspace.\n\nWhen used with the `target_team_ids` parameter, this method sets the requested `channel_id` as a [cross-workspace shared channel](/enterprise/shared-channels). The channel is shared to all the workspaces in `target_team_ids`.\n\nEither way, this method can be used both to _add_ and to _remove_ workspaces from a channel, including the workspace that originated the channel.\n\nWhen connecting a workspace to many channels at the same time, the message history for each channel will be available after _all_ channels have been processed. To access a channel's message history _before_ the process is complete, a hard refresh is required. Additionally, for particularly larger requests, the process may take some time.\n\nThis [API method for admins](/enterprise/managing) may only be used on [Enterprise Grid](/enterprise).\n\nThis `admin` scope is obtained through [version two of the OAuth V2 flow](/authentication/oauth-v2), but there are a few additional requirements. The app requesting this scope **must** be [installed](/start/overview#installing_distributing) by an _ **admin or Owner** _ of an Enterprise Grid organization. Also, the app must be installed on the **entire** org, not on an individual workspace. See below for more details.\n\nIf the app is installed by an Org Admin or Owner, ensure the Channel Management settings provide the appropriate permissions.\n\nAdmin API endpoints reach across **an entire Enterprise Grid organization** , not individual workspaces.\n\nFor a token to be imbued with Admin scopes, it must be obtained from installing an app on the **entire Grid org** , not just a workspace within the organization.\n\nTo configure and install an app supporting Admin API endpoints on your Enterprise Grid organization:\n\n1. [Create a new Slack app](/apps). Your app will need to be able to handle a standard [OAuth 2 flow](/docs/oauth#flow).\n2. In the app's settings, select **OAuth & Permissions** from the left navigation. Scroll down to the section titled **Scopes** and add the `admin.*` scope you want. Click the green **Save Changes** button.\n3. In the app's settings, select **Manage Distribution** from the left navigation. Under the section titled **Share Your App with Other Workspaces** , make sure all four sections have the green check. Then click the green **Activate Public Distribution** button.\n4. Under the **Share Your App with Your Workspace** section, copy the **Sharable URL** and paste it into a browser to initiate the OAuth handshake that will install the app on your organization. You must be logged in as an **admin or Owner** of your Enterprise Grid organization to install the app.\n5. Check the dropdown in the upper right of the installation screen to make sure you are installing the app on the organization, not an individual workspace within the organization. See the image below for a visual.\n6. Once your app completes the OAuth flow, you will be granted an OAuth token that can be used for calling Admin API methods for your organization.\n ![](https://a.slack-edge.com/80588/img/api/workspace-v-org-audit.png)\n_When installing an app to use an Admin API endpoint, be sure to install it on your Grid organization, not a workspace within the organization._",
  "args": {
    "token": {
      "required": true,
      "example": "xxxx-xxxxxxxxx-xxxx",
      "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter."
    },
    "channel_id": {
      "required": true,
      "example": "",
      "desc": "The encoded `channel_id` to add or remove to workspaces."
    },
    "org_channel": {
      "required": false,
      "example": "false",
      "desc": "True if channel has to be converted to an org channel"
    },
    "target_team_ids": {
      "required": false,
      "example": "T1234,T5678,T9012,T3456",
      "desc": "A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide."
    },
    "team_id": {
      "required": false,
      "example": "",
      "desc": "The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel."
    }
  },
  "response": {
    "success": {
      "ok": true
    }
  },
  "errors": {
    "restricted_action": "The caller of this API is not allowed to perform this operation.",
    "not_enabled": "The API endpoint is not enabled for your team.",
    "invalid_channel_id": "`channel_id` was invalid.",
    "channel_not_found": "The channel wasn't found or isn't shared to this workspace.",
    "name_taken": "The channel's name was already used in one of the workspce.",
    "invalid_target_team": "Target workspace is invalid.",
    "channel_type_not_supported": "The requested `channel_id` is not a supported type of channel.",
    "could_not_set_teams_for_channel": "The requested `channel_id` has not been shared with the target workspace.",
    "channel_cannot_be_unshared": "Channel cannot be unshared from this workspace.",
    "default_org_wide_channel": "Default org wide channel cannot be unshared from a workspace.",
    "unsupported_arguments": "The provided method arguments are not supported.",
    "too_many_target_teams": "Too many `target_team_ids` were provided.",
    "externally_shared_or_disconnected_channel": "The channel is or was externally shared.",
    "cannot_move_local_channel": "This API cannot be used to move a local channel from one workspace to another.",
    "not_allowed_for_grid_workspace": "Slack Connect is not allowed for this grid workspace",
    "cannot_add_legacy_disconnected_channel_to_workspaces": "Cannot add legacy disconnected channel to workspaces",
    "not_authed": "No authentication token provided.",
    "invalid_auth": "Some aspect of authentication cannot be validated. Either the provided token is invalid or the request originates from an IP address disallowed from making the request.",
    "access_denied": "Access to a resource specified in the request is denied.",
    "account_inactive": "Authentication token is for a deleted user or workspace when using a `bot` token.",
    "token_revoked": "Authentication token is for a deleted user or workspace or the app has been removed when using a `user` token.",
    "token_expired": "Authentication token has expired",
    "no_permission": "The workspace token used in this request does not have the permissions necessary to complete the request. Make sure your app is a member of the conversation it's attempting to post a message to.",
    "org_login_required": "The workspace is undergoing an enterprise migration and will not be available until migration is complete.",
    "ekm_access_denied": "Administrators have suspended the ability to post a message.",
    "missing_scope": "The token used is not granted the specific scope permissions required to complete this request.",
    "not_allowed_token_type": "The token type used in this request is not allowed.",
    "method_deprecated": "The method has been deprecated.",
    "deprecated_endpoint": "The endpoint has been deprecated.",
    "two_factor_setup_required": "Two factor setup is required.",
    "enterprise_is_restricted": "The method cannot be called from an Enterprise.",
    "is_bot": "This method cannot be called by a bot user.",
    "invalid_arguments": "The method was either called with invalid arguments or some detail about the arguments passed are invalid, which is more likely when using complex arguments like blocks or attachments.",
    "invalid_arg_name": "The method was passed an argument whose name falls outside the bounds of accepted or expected values. This includes very long names and names with non-alphanumeric characters other than `_`. If you get this error, it is typically an indication that you have made a _very_ malformed API call.",
    "invalid_array_arg": "The method was passed an array as an argument. Please only input valid strings.",
    "invalid_charset": "The method was called via a `POST` request, but the `charset` specified in the `Content-Type` header was invalid. Valid charset names are: `utf-8` `iso-8859-1`.",
    "invalid_form_data": "The method was called via a `POST` request with `Content-Type` `application/x-www-form-urlencoded` or `multipart/form-data`, but the form data was either missing or syntactically invalid.",
    "invalid_post_type": "The method was called via a `POST` request, but the specified `Content-Type` was invalid. Valid types are: `application/json` `application/x-www-form-urlencoded` `multipart/form-data` `text/plain`.",
    "missing_post_type": "The method was called via a `POST` request and included a data payload, but the request did not include a `Content-Type` header.",
    "team_added_to_org": "The workspace associated with your request is currently undergoing migration to an Enterprise Organization. Web API and other platform operations will be intermittently unavailable until the transition is complete.",
    "ratelimited": "The request has been ratelimited. Refer to the `Retry-After` header for when to retry the request.",
    "accesslimited": "Access to this method is limited on the current network",
    "request_timeout": "The method was called via a `POST` request, but the `POST` data was either missing or truncated.",
    "service_unavailable": "The service is temporarily unavailable",
    "fatal_error": "The server could not complete your operation(s) without encountering a catastrophic error. It's possible some aspect of the operation succeeded before the error was raised.",
    "internal_error": "The server could not complete your operation(s) without encountering an error, likely due to a transient issue on our end. It's possible some aspect of the operation succeeded before the error was raised."
  }
}