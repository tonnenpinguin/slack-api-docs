{
  "desc": "List conversations the calling user may access.\n\nThis method helps answer questions like:\n\n- Which conversations am I a member of?\n- Which public channels is my bot user in?\n- Do I have any direct messages open with my friend Suzy?\n- Is my bot a member of any private channels?\n\n`users.conversations` returns a list of all [channel-like conversations](/types/conversation) accessible to the user or app tied to the presented token, as part of our [Conversations API](/docs/conversations-api).\n\nBrowse the public channel membership of other users with the `user` parameter. Private channel membership is only listed when the calling user, bot user, or app shares membership in a direct message, multi-person direct message, or private channel. Further filter channels by type with the `types` parameter.\n\nReturns a list of limited channel-like [conversation objects](/types/conversation).\n\nTo get a full [conversation object](/types/conversations), call the [`conversations.info`](/methods/conversations.info) method. We omit the `is_member` and `num_members` fields in this method's response.\n\nSee [conversation object](/types/conversations) for more detail on returned fields.\n\n## Pagination\n\nThis method uses cursor-based pagination to make it easier to incrementally collect information. To begin pagination, specify a `limit` value under `1000`. We recommend no more than `200` results at a time.\n\nResponses will include a top-level `response_metadata` attribute containing a `next_cursor` value. By using this value as a `cursor` parameter in a subsequent request, along with `limit`, you may navigate through the collection page by virtual page.\n\nSee [pagination](/docs/pagination) for more information.\n\n## Token support\n\nUsing a [bot user token](/docs/token-types#bot), this method returns the channels and conversations your bot is party to. Specifying a `user` parameter filters to conversations your bot shares with that user.\n\nA [user token](/docs/token-types#user) armed with [`channels:read`](/scopes/channels:read) will similarly supply the channels the calling user is a member of. Supplying the `user` parameter narrows results to conversations featuring both the calling user and the identified user.",
  "args": {
    "token": {
      "required": true,
      "example": "xxxx-xxxxxxxxx-xxxx",
      "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter."
    },
    "cursor": {
      "required": false,
      "example": "dXNlcjpVMDYxTkZUVDI=",
      "desc": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
    },
    "exclude_archived": {
      "required": false,
      "example": "false",
      "desc": "Set to `true` to exclude archived channels from the list"
    },
    "limit": {
      "required": false,
      "example": "100",
      "desc": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000."
    },
    "team_id": {
      "required": false,
      "example": "T1234567890",
      "desc": "encoded team id to list conversations in, required if org token is used"
    },
    "types": {
      "required": false,
      "example": "public_channel",
      "desc": "Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`"
    },
    "user": {
      "required": false,
      "example": "W0B2345D",
      "desc": "Browse conversations by a specific user ID's membership. Non-public channels are restricted to those where the calling user shares membership."
    }
  },
  "response": {
    "success": {
      "ok": true,
      "channels": [
        {
          "id": "C012AB3CD",
          "name": "general",
          "is_channel": true,
          "is_group": false,
          "is_im": false,
          "created": 1449252889,
          "creator": "U012A3CDE",
          "is_archived": false,
          "is_general": true,
          "unlinked": 0,
          "name_normalized": "general",
          "is_shared": false,
          "is_ext_shared": false,
          "is_org_shared": false,
          "pending_shared": [

          ],
          "is_pending_ext_shared": false,
          "is_private": false,
          "is_mpim": false,
          "topic": {
            "value": "Company-wide announcements and work-based matters",
            "creator": "",
            "last_set": 0
          },
          "purpose": {
            "value": "This channel is for team-wide communication and announcements. All team members are in this channel.",
            "creator": "",
            "last_set": 0
          },
          "previous_names": [

          ]
        },
        {
          "id": "C061EG9T2",
          "name": "random",
          "is_channel": true,
          "is_group": false,
          "is_im": false,
          "created": 1449252889,
          "creator": "U061F7AUR",
          "is_archived": false,
          "is_general": false,
          "unlinked": 0,
          "name_normalized": "random",
          "is_shared": false,
          "is_ext_shared": false,
          "is_org_shared": false,
          "pending_shared": [

          ],
          "is_pending_ext_shared": false,
          "is_private": false,
          "is_mpim": false,
          "topic": {
            "value": "Non-work banter and water cooler conversation",
            "creator": "",
            "last_set": 0
          },
          "purpose": {
            "value": "A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.",
            "creator": "",
            "last_set": 0
          },
          "previous_names": [

          ]
        }
      ],
      "response_metadata": {
        "next_cursor": "dGVhbTpDMDYxRkE1UEI="
      }
    },
    "error": {
      "ok": false,
      "error": "invalid_auth"
    }
  },
  "errors": {
    "method_not_supported_for_channel_type": "This type of conversation cannot be used with this method.",
    "missing_scope": "The token used is not granted the specific scope permissions required to complete this request.",
    "invalid_types": "Value passed for `type` could not be used based on the method's capabilities or the permission scopes granted to the used token.",
    "invalid_cursor": "Value passed for `cursor` was not valid or is no longer valid.",
    "invalid_limit": "Value passed for `limit` is not understood.",
    "missing_argument": "A required argument is missing.",
    "not_authed": "No authentication token provided.",
    "invalid_auth": "Some aspect of authentication cannot be validated. Either the provided token is invalid or the request originates from an IP address disallowed from making the request.",
    "access_denied": "Access to a resource specified in the request is denied.",
    "account_inactive": "Authentication token is for a deleted user or workspace when using a `bot` token.",
    "token_revoked": "Authentication token is for a deleted user or workspace or the app has been removed when using a `user` token.",
    "token_expired": "Authentication token has expired",
    "no_permission": "The workspace token used in this request does not have the permissions necessary to complete the request. Make sure your app is a member of the conversation it's attempting to post a message to.",
    "org_login_required": "The workspace is undergoing an enterprise migration and will not be available until migration is complete.",
    "ekm_access_denied": "Administrators have suspended the ability to post a message.",
    "not_allowed_token_type": "The token type used in this request is not allowed.",
    "method_deprecated": "The method has been deprecated.",
    "deprecated_endpoint": "The endpoint has been deprecated.",
    "two_factor_setup_required": "Two factor setup is required.",
    "enterprise_is_restricted": "The method cannot be called from an Enterprise.",
    "team_access_not_granted": "The token used is not granted the specific workspace access required to complete this request.",
    "invalid_arguments": "The method was either called with invalid arguments or some detail about the arguments passed are invalid, which is more likely when using complex arguments like blocks or attachments.",
    "invalid_arg_name": "The method was passed an argument whose name falls outside the bounds of accepted or expected values. This includes very long names and names with non-alphanumeric characters other than `_`. If you get this error, it is typically an indication that you have made a _very_ malformed API call.",
    "invalid_array_arg": "The method was passed an array as an argument. Please only input valid strings.",
    "invalid_charset": "The method was called via a `POST` request, but the `charset` specified in the `Content-Type` header was invalid. Valid charset names are: `utf-8` `iso-8859-1`.",
    "invalid_form_data": "The method was called via a `POST` request with `Content-Type` `application/x-www-form-urlencoded` or `multipart/form-data`, but the form data was either missing or syntactically invalid.",
    "invalid_post_type": "The method was called via a `POST` request, but the specified `Content-Type` was invalid. Valid types are: `application/json` `application/x-www-form-urlencoded` `multipart/form-data` `text/plain`.",
    "missing_post_type": "The method was called via a `POST` request and included a data payload, but the request did not include a `Content-Type` header.",
    "team_added_to_org": "The workspace associated with your request is currently undergoing migration to an Enterprise Organization. Web API and other platform operations will be intermittently unavailable until the transition is complete.",
    "ratelimited": "The request has been ratelimited. Refer to the `Retry-After` header for when to retry the request.",
    "accesslimited": "Access to this method is limited on the current network",
    "request_timeout": "The method was called via a `POST` request, but the `POST` data was either missing or truncated.",
    "service_unavailable": "The service is temporarily unavailable",
    "fatal_error": "The server could not complete your operation(s) without encountering a catastrophic error. It's possible some aspect of the operation succeeded before the error was raised.",
    "internal_error": "The server could not complete your operation(s) without encountering an error, likely due to a transient issue on our end. It's possible some aspect of the operation succeeded before the error was raised."
  }
}