{
  "desc": "Lists reactions made by a user.\n\nThis method returns a list of all items (file, file comment, channel message, group message, or direct message) reacted to by a user.\n\nThe response contains a list of items with reactions followed by pagination information.\n\nDifferent item types can be reacted to. Every item in the list has a `type` property, the other properties depend on the type of item. The possible types are:\n\n- **`message`** : the item will have a `message` property containing a [message object](/docs/messages) and a `channel` property containing the channel ID for the message.\n- **`file`** : this item will have a `file` property containing a [file object](/types/file).\n- **`file_comment`** : the item will have a `file` property containing the [file object](/types/file) and a `comment` property containing the file comment.\n\nThe users array in the `reactions` property might not always contain all users that have reacted (we limit it to X users, and X might change), however `count` will always represent the count of all users who made that reaction (i.e. it may be greater than `users.length`). If the authenticated user has a given reaction then they are guaranteed to appear in the `users` array, regardless of whether `count` is greater than `users.length` or not. If the complete list of users is required they can still be obtained by specifying the `full` argument.\n\nThe paging information contains the `count` of items returned, the `total`number of items reacted to, the `page` of results returned in this response and the total number of `pages` available. Please note that the max `count` value is `1000` and the max `page` value is `100`.",
  "args": {
    "token": {
      "required": true,
      "example": "xxxx-xxxxxxxxx-xxxx",
      "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter."
    },
    "count": {
      "required": false,
      "example": "100",
      "desc": "Number of items to return per page."
    },
    "cursor": {
      "required": false,
      "example": "dXNlcjpVMDYxTkZUVDI=",
      "desc": "Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more details."
    },
    "full": {
      "required": false,
      "example": "true",
      "desc": "If true always return the complete reaction list."
    },
    "limit": {
      "required": false,
      "example": "0",
      "desc": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached."
    },
    "page": {
      "required": false,
      "example": "1",
      "desc": "Page number of results to return."
    },
    "team_id": {
      "required": false,
      "example": "T1234567890",
      "desc": "encoded team id to list reactions in, required if org token is used"
    },
    "user": {
      "required": false,
      "example": "W1234567890",
      "desc": "Show reactions made by this user. Defaults to the authed user."
    }
  },
  "response": {
    "success": {
      "items": [
        {
          "type": "message",
          "channel": "C3UKJTQAC",
          "message": {
            "bot_id": "B4VLRLMKJ",
            "reactions": [
              {
                "count": 1,
                "name": "robot_face",
                "users": [
                  "U2U85N1RV"
                ]
              }
            ],
            "subtype": "bot_message",
            "text": "Hello from Python! :tada:",
            "ts": "1507849573.000090",
            "username": "Shipit Notifications"
          }
        },
        {
          "comment": {
            "type": "file_comment",
            "comment": "This is a file comment",
            "created": 1508286096,
            "id": "Fc7LP08P1U",
            "reactions": [
              {
                "count": 1,
                "name": "white_check_mark",
                "users": [
                  "U2U85N1RV"
                ]
              }
            ],
            "timestamp": 1508286096,
            "user": "U2U85N1RV"
          },
          "file": {
            "channels": [
              "C2U7V2YA2"
            ],
            "comments_count": 1,
            "created": 1507850315,
            "reactions": [
              {
                "count": 1,
                "name": "stuck_out_tongue_winking_eye",
                "users": [
                  "U2U85N1RV"
                ]
              }
            ],
            "title": "computer.gif",
            "user": "U2U85N1RV",
            "username": ""
          }
        },
        {
          "file": {
            "channels": [
              "C2U7V2YA2"
            ],
            "comments_count": 1,
            "created": 1507850315,
            "id": "F7H0D7ZA4",
            "name": "computer.gif",
            "reactions": [
              {
                "count": 1,
                "name": "stuck_out_tongue_winking_eye",
                "users": [
                  "U2U85N1RV"
                ]
              }
            ],
            "size": 1639034,
            "title": "computer.gif",
            "user": "U2U85N1RV",
            "username": ""
          },
          "type": "file"
        }
      ],
      "ok": true,
      "response_metadata": {
        "next_cursor": "dGVhbTpDMUg5UkVTR0w="
      }
    },
    "error": {
      "ok": false,
      "error": "invalid_auth"
    }
  },
  "errors": {
    "user_not_found": "Value passed for `user` was invalid.",
    "not_authed": "No authentication token provided.",
    "invalid_auth": "Some aspect of authentication cannot be validated. Either the provided token is invalid or the request originates from an IP address disallowed from making the request.",
    "access_denied": "Access to a resource specified in the request is denied.",
    "account_inactive": "Authentication token is for a deleted user or workspace when using a `bot` token.",
    "token_revoked": "Authentication token is for a deleted user or workspace or the app has been removed when using a `user` token.",
    "token_expired": "Authentication token has expired",
    "no_permission": "The workspace token used in this request does not have the permissions necessary to complete the request. Make sure your app is a member of the conversation it's attempting to post a message to.",
    "org_login_required": "The workspace is undergoing an enterprise migration and will not be available until migration is complete.",
    "ekm_access_denied": "Administrators have suspended the ability to post a message.",
    "missing_scope": "The token used is not granted the specific scope permissions required to complete this request.",
    "not_allowed_token_type": "The token type used in this request is not allowed.",
    "method_deprecated": "The method has been deprecated.",
    "deprecated_endpoint": "The endpoint has been deprecated.",
    "two_factor_setup_required": "Two factor setup is required.",
    "enterprise_is_restricted": "The method cannot be called from an Enterprise.",
    "team_access_not_granted": "The token used is not granted the specific workspace access required to complete this request.",
    "invalid_arguments": "The method was either called with invalid arguments or some detail about the arguments passed are invalid, which is more likely when using complex arguments like blocks or attachments.",
    "invalid_arg_name": "The method was passed an argument whose name falls outside the bounds of accepted or expected values. This includes very long names and names with non-alphanumeric characters other than `_`. If you get this error, it is typically an indication that you have made a _very_ malformed API call.",
    "invalid_array_arg": "The method was passed an array as an argument. Please only input valid strings.",
    "invalid_charset": "The method was called via a `POST` request, but the `charset` specified in the `Content-Type` header was invalid. Valid charset names are: `utf-8` `iso-8859-1`.",
    "invalid_form_data": "The method was called via a `POST` request with `Content-Type` `application/x-www-form-urlencoded` or `multipart/form-data`, but the form data was either missing or syntactically invalid.",
    "invalid_post_type": "The method was called via a `POST` request, but the specified `Content-Type` was invalid. Valid types are: `application/json` `application/x-www-form-urlencoded` `multipart/form-data` `text/plain`.",
    "missing_post_type": "The method was called via a `POST` request and included a data payload, but the request did not include a `Content-Type` header.",
    "team_added_to_org": "The workspace associated with your request is currently undergoing migration to an Enterprise Organization. Web API and other platform operations will be intermittently unavailable until the transition is complete.",
    "ratelimited": "The request has been ratelimited. Refer to the `Retry-After` header for when to retry the request.",
    "accesslimited": "Access to this method is limited on the current network",
    "request_timeout": "The method was called via a `POST` request, but the `POST` data was either missing or truncated.",
    "service_unavailable": "The service is temporarily unavailable",
    "fatal_error": "The server could not complete your operation(s) without encountering a catastrophic error. It's possible some aspect of the operation succeeded before the error was raised.",
    "internal_error": "The server could not complete your operation(s) without encountering an error, likely due to a transient issue on our end. It's possible some aspect of the operation succeeded before the error was raised."
  }
}